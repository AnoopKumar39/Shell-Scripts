#!/bin/bash 

# if we assign a name to a set of data then it is called as a variable 
# if we assign a name to a set of commands then it is called as a function 

# there are four types of commands, function is one of them 
## 1. Binaries which are stored in system location like /bin 
## 2. Functions 
## 3. Alias 
## 4. Shell-Builtin

## Declare a function 
samplex() {
    echo Hello 
    echo Bye
}

## Call the function 
samplex 

## Function is a command and hence we can parse the inputs 
sampley() {
    echo First Argumnent = $1 
    echo Second Argument = $2
}

sampley 10 98 


## Function is a command and hence it has exit status as well , but we cannot use exit command because it exits the complete script where as for function to come out we use return command and status is same like exit command ranges from 0-255 

sample_stat() {
    echo Hello 
    return 20
    echo Bye 
}

sample_stat 
echo "Status of function = $?"


## Variables in main program can be accessed by functions and vice-versa

sample_vars() {
    af=100
    echo "Value of am=$am"
}

am=200 
sample_vars
echo "Value of af=$af"

## Some times we want to limit the variable in function to be accessible only inside function

sample_local() {
    local a2=100 
    echo "Value of a2 in function = $a2 "
}

sample_local
echo "Value of a2 in main program = $a2 "


sample_ow() {
    name=Anoop
}
sample_or() {
    name=Navya
}

sample_or
sample_ow
echo $name
###
